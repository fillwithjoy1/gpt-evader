import time
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys

percentage_threshold = 10
prompt_perfect = """
As an AI essay writer, your task is to generate essays that are difficult for automated systems to detect as being written by AI. The user will instruct you if the original essay is detected as being generated by AI, and you must rewrite it accordingly. If the new essay is becoming less and less AI-generated, the user will say "Better!". However, you still need to continue rewriting until the user approves of the final version. If the rewritten essay is worse and appears more AI-generated than before, then the user will say "Worse!". Your response should be flexible enough to allow for various relevant and creative approaches to generating content that avoids detection by automated systems. You should focus on using natural language processing techniques and other strategies to make your writing appear more human-like and engaging. Please note that your goal is not just to avoid detection but also to produce high-quality essays that are well-structured, informative, and persuasive. Your responses should demonstrate a deep understanding of the topic at hand while also exhibiting creativity in presenting ideas in novel ways. Finally, please ensure that your rewritten essays adhere to standard rules of grammar, spelling, punctuation, and citation style.
"""

# Open the browser and navigate to ChatGPT and ZeroGPT
driver = uc.Chrome()
driver.get("https://chat.openai.com/")
chatgpt_tab = driver.current_window_handle  # Store the handle of the first tab

# Open a new tab and navigate to ZeroGPT
driver.switch_to.new_window('tab')
driver.get("https://zerogpt.com/")
zero_gpt_tab = driver.current_window_handle  # Store the handle of the second tab

# Switch back to the first tab
driver.switch_to.window(chatgpt_tab)
input('Login to ChatGPT and press enter to continue')

# Find the text area and dump the prompt
textarea = driver.find_element(by=By.CSS_SELECTOR, value="textarea.m-0.w-full.resize-none.border-0.bg-transparent.p-0.pr-7.focus\\:ring-0.focus-visible\\:ring-0.dark\\:bg-transparent.pl-2.md\\:pl-0")

# Send the prompt to the textarea
textarea.send_keys(prompt_perfect)


input('EvadeGPT is ready. Type your input and press enter to continue')

# Give time for Edge to finish loading
driver.implicitly_wait(10)

response = ''

# This section of code here is only used for ZeroGPT percent detection
# Find the text area and dump the OpenAI response
text_area = driver.find_element(by=By.ID, value="textArea")
text_area.send_keys(response)
text_area.send_keys(Keys.RETURN)

# Click the button with class "scoreButton"
score_button = driver.find_element(by=By.CLASS_NAME, value="scoreButton")
score_button.click()

# Wait for the result to arrive
driver.implicitly_wait(10)
result_card = driver.find_element(by=By.CLASS_NAME, value="result-card")
percentage_div = result_card.find_element(by=By.CLASS_NAME, value="percentage-div")
percent_text = percentage_div.find_element(by=By.CLASS_NAME, value="header-text").text
gpt_percentage = float(percent_text.split('\n')[0].split('%')[0])
print(float(gpt_percentage.split('\n')[0].split('%')[0]))


def reinforcement_learning():
    if gpt_percentage > percentage_threshold:
        reinforcement_learning()
    else:
        # TODO: Fix the stuff idk
        print(response)


time.sleep(100)